0. The first thing to do is install python3. The easiest way to do this on all platforms is to download ANACONDA which is a python installation package that gives you all the necessary dependencies: 
https://www.continuum.io/downloads. 

1. Create a top-level directory to contain the pipeline code along with its necessary files such as the GaussClumps parameter file and the Smoothing Kernels.
   Then, make directories for each region and each reduction, so all of the SDF files that you would like to compare against each other are in one place. 

	The way I have organised my directory heirarchy is as follows:
   
   		TC-pipeline/

				run_TC_pipeline.py

				kernels/
				             *kernel*.sdf

				GC_params/
					  
					     gc_parameter_file.txt

				IC348/
					     R1/
					          *R1*sdf
					     R2/
					          *R2*sdf
					     R3/
					          *R3*sdf
					     R4/
					          *R4*sdf

                                NGC2071/
                                             R1/
                                                  *R1*sdf
                                             R2/
                                                  *R2*sdf
                                             R3/
                                                  *R3*sdf
                                             R4/
                                                  *R4*sdf


etc.


2. Open python3 from your anaconda installation:

>>> /path/to/anaconda3/bin/python3 
 

Once python3 is open, simply type

>>> from run_TC_pipeline import *

This will load all the packages you need

If the default values are fine (check run_TC_pipeline.py), type:

>>> run_TC_pipeline(dirname,kern_name,param_file)

where dirname is a string which gives the FULL directory name containing the SDF files you'd like to compare, kern_name is the FULL path and file name for the smoothing kernel you'd like to employ, and param_file is the FULL path and GaussClumps parameter file name. 

If you'd like more control over the parameters, you can run the full version of this function and change any of the inputs. Each input is described in more detail in run_TC_pipeline.py 

>>> run_TC_pipeline(dirname,kern_name,param_file,beam_fwhm=14.5,crop_radius=1200,crop_method='CIRCLE',minpeak=0.2,maxrad=30.0,maxsep=10.0,units='mjya2',wave=850)


3. Upon running the program, a new directory will be created in the same directory as the original sdf files supplied called TC-date. In TC-date, there are the GaussClumps catalogues for each observation (both fits and text), the clump maps generated by GaussClumps, the calibration results (offsets, peak ratio etc), as well as the the cropped and smoothed, unit converted images - all organised in their own directories named cats-fits/, cats-txt/, clumpmaps/, calib-results-txt/, and cropped-smoothed-images/, respectively. 
